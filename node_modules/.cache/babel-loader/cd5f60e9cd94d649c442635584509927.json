{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seanr\\\\Vouch\\\\src\\\\components\\\\Cart.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport OpportunityCart from './OpportunityCart';\nimport Opportunity from './Opportunity';\nimport { Card, CardBody } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { EventConsumer } from '../context';\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport firebase from './Firestore';\nimport Checkout from './Checkout';\nvar eventName = \"Hello!\";\nexport default class Cart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      eventArray: [],\n      totalCost: 0\n    };\n  }\n\n  componentWillMount() {\n    const db = firebase.firestore();\n    const cost = this.state.totalCost;\n    db.collection(\"cart\").get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        // doc.data() is never undefined for query doc snapshots\n        console.log(doc.id, \" => \", doc.data()); //cost += doc.get('price');\n\n        this.createEvent(doc.get('name'), doc.get('sponsorship'), doc.get('desc'), doc.get('price'), doc.get('name'));\n      });\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    }); //console.log(this.state.totalCost);\n    //alert(cost);\n  }\n\n  removeEvent(name) {\n    console.log('hello');\n    console.log(name);\n    const db = firebase.firestore();\n    db.collection(\"cart\").doc(name).delete().then(function () {\n      console.log(\"Document successfully deleted!\");\n      window.location.reload();\n    }).catch(function (error) {\n      console.error(\"Error removing document: \", error);\n    });\n  }\n\n  createEvent(name, sponsorship, desc, price) {\n    const event = this.state.eventArray;\n    const cost = this.state.totalCost;\n    console.log(name);\n    console.log(sponsorship);\n    console.log(desc);\n    console.log(price);\n    this.state.totalCost += price; //alert(cost);\n\n    event.push(React.createElement(\"div\", {\n      className: \"mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: cardStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      style: eventNameStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, sponsorship), React.createElement(\"p\", {\n      style: companyStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, desc), React.createElement(\"p\", {\n      style: dateStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"$\", price), React.createElement(\"button\", {\n      style: buttonStyle,\n      id: name,\n      onClick: () => this.removeEvent(name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Remove From Cart\")))));\n    this.setState({\n      eventArray: event\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.eventArray.map((event, index) => {\n      return React.createElement(\"div\", {\n        className: \"box\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, event);\n    }))), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Total\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"$\", this.state.totalCost), React.createElement(PayPalButton, {\n      amount: this.state.totalCost,\n      onSuccess: (details, data) => {\n        alert(\"Transaction completed by \" + details.payer.name.given_name); // OPTIONAL: Call your server to save the transaction\n\n        return fetch(\"/paypal-transaction-complete\", {\n          method: \"post\",\n          body: JSON.stringify({\n            orderID: data.orderID\n          })\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))));\n  }\n\n}\nconst dateStyle = {\n  color: \"#063FA3\"\n};\nconst buttonStyle = {\n  width: 200,\n  background: \"transparent\",\n  borderColor: \"blue\",\n  borderRadius: \"10px\"\n};\nconst companyStyle = {\n  color: '#6B6B6B'\n};\nconst eventNameStyle = {\n  color: '#000000'\n};\nconst cardStyle = {\n  width: 1000,\n  height: 250\n};\nconst cartBtn = {\n  background: \"transparent\",\n  borderRadius: \"0.3em\",\n  color: \"blue\",\n  bottom: \"20\"\n};\nconst col = {\n  marginLeft: 350\n};","map":{"version":3,"sources":["C:\\Users\\seanr\\Vouch\\src\\components\\Cart.js"],"names":["React","Component","OpportunityCart","Opportunity","Card","CardBody","Link","EventConsumer","PayPalButton","firebase","Checkout","eventName","Cart","state","eventArray","totalCost","componentWillMount","db","firestore","cost","collection","get","then","querySnapshot","forEach","doc","console","log","id","data","createEvent","catch","error","removeEvent","name","delete","window","location","reload","sponsorship","desc","price","event","push","cardStyle","eventNameStyle","companyStyle","dateStyle","buttonStyle","setState","render","map","index","details","alert","payer","given_name","fetch","method","body","JSON","stringify","orderID","color","width","background","borderColor","borderRadius","height","cartBtn","bottom","col","marginLeft"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport OpportunityCart from './OpportunityCart'\r\nimport Opportunity from './Opportunity';\r\nimport {Card, CardBody} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {EventConsumer} from '../context';\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport firebase from './Firestore'\r\nimport Checkout from './Checkout';\r\n\r\nvar eventName = \"Hello!\"\r\nexport default class Cart extends Component {\r\n    state = {\r\n        eventArray: [],\r\n        totalCost: 0\r\n    }\r\n\r\n    componentWillMount()\r\n    {\r\n        const db = firebase.firestore();\r\n        const cost = this.state.totalCost;\r\n        db.collection(\"cart\").get().then(querySnapshot => {\r\n            querySnapshot.forEach(doc => {\r\n                // doc.data() is never undefined for query doc snapshots\r\n                console.log(doc.id, \" => \", doc.data());\r\n                //cost += doc.get('price');\r\n                this.createEvent(doc.get('name'), doc.get('sponsorship'),doc.get('desc'),doc.get('price'), doc.get('name'));\r\n            });\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error getting documents: \", error);\r\n        });\r\n        //console.log(this.state.totalCost);\r\n        //alert(cost);\r\n    }  \r\n    removeEvent(name)\r\n    {\r\n        console.log('hello')\r\n        console.log(name);\r\n        const db = firebase.firestore();\r\n        db.collection(\"cart\").doc(name).delete().then(function() {\r\n            console.log(\"Document successfully deleted!\");\r\n            window.location.reload();\r\n        }).catch(function(error) {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n        \r\n    }\r\n\r\n    createEvent(name, sponsorship, desc, price)\r\n    {\r\n        const event = this.state.eventArray;\r\n        const cost = this.state.totalCost;\r\n        console.log(name);\r\n        console.log(sponsorship);\r\n        console.log(desc);\r\n        console.log(price);\r\n        this.state.totalCost += price;\r\n        //alert(cost);\r\n        event.push(\r\n            <div className=\"mx-auto\">\r\n                <Card style={cardStyle}>\r\n                    <CardBody>\r\n                        <h2>{name}</h2>\r\n                        <p style={eventNameStyle}>{sponsorship}</p>\r\n                        <p style={companyStyle}>{desc}</p>\r\n                        <p style={dateStyle}>${price}</p>\r\n                        <button style={buttonStyle} id={name} onClick={() => this.removeEvent(name)}>Remove From Cart</button>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        )\r\n        this.setState({eventArray: event})\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div>\r\n                            {this.state.eventArray.map((event, index) => {\r\n                                return <div className=\"box\" key={index}>{event}</div>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <h1>Total</h1>\r\n                        <h2>${this.state.totalCost}</h2>\r\n                        <PayPalButton\r\n                            amount={this.state.totalCost}\r\n                            onSuccess={(details, data) => {\r\n                            alert(\"Transaction completed by \" + details.payer.name.given_name);\r\n                    \r\n                            // OPTIONAL: Call your server to save the transaction\r\n                            return fetch(\"/paypal-transaction-complete\", {\r\n                                method: \"post\",\r\n                                body: JSON.stringify({\r\n                                orderID: data.orderID\r\n                                })\r\n                            });\r\n                            }}\r\n                        />\r\n                             \r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst dateStyle = {\r\n    color: \"#063FA3\",\r\n};\r\nconst buttonStyle = {\r\n    width: 200,\r\n    background: \"transparent\",\r\n    borderColor: \"blue\",\r\n    borderRadius: \"10px\"\r\n};\r\nconst companyStyle = {\r\n    color: '#6B6B6B'\r\n};\r\nconst eventNameStyle = {\r\n    color: '#000000'\r\n};\r\nconst cardStyle = {\r\n    width: 1000,\r\n    height: 250\r\n};\r\n\r\nconst cartBtn = {\r\n    background: \"transparent\",\r\n    borderRadius: \"0.3em\",\r\n    color: \"blue\",\r\n    bottom: \"20\",\r\n};\r\n\r\nconst col = {\r\n    marginLeft: 350\r\n};"]},"metadata":{},"sourceType":"module"}