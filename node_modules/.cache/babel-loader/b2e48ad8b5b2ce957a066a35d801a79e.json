{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\seanr\\\\Vouch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\seanr\\\\Vouch\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct, eventList } from './data';\nconst EventContext = React.createContext();\n\nclass EventProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [],\n      //TODO CHANGE TO EVENT LIST\n      details: detailProduct,\n      //TODO CHANGE TO EVENT\n      perks: [],\n      cart: [],\n      result: 0\n    };\n\n    this.setEvents = () => {\n      let tempEvents = [];\n      eventList.forEach(event => {\n        const singleEvent = _objectSpread({}, event);\n\n        tempEvents = [...tempEvents, singleEvent];\n      });\n      this.setState(() => {\n        return {\n          events: tempEvents\n        };\n      });\n    };\n\n    this.updateResult = newRes => {\n      this.setState(() => {\n        return {\n          result: newRes\n        };\n      });\n    };\n\n    this.getResult = newRes => {\n      this.updateResult(newRes);\n    };\n\n    this.getEvent = id => {\n      console.log(id + \"from context\");\n      const event = this.state.events.find(event => event.id === id);\n      return event;\n    };\n\n    this.getEventbyName = name => {\n      console.log(name + \"from context\");\n      const event = this.state.events.find(event => event.name === name);\n      return event;\n    };\n\n    this.handleDetails = id => {\n      console.log(id);\n      const event = this.getEvent(id);\n      this.setState(() => {\n        return {\n          details: event\n        };\n      });\n      console.log(\"dets\");\n      console.log(this.state.details);\n    };\n\n    this.addToCart = id => {\n      let tempEvents = [...this.state.events];\n      const firstIndex = tempEvents.indexOf(this.getEventbyName(id));\n      const actIndex = tempEvents[firstIndex].find(opp => opp.id === id);\n      const opp = tempEvents[firstIndex][actIndex];\n      opp.inCart = true;\n      this.setState(() => {\n        return {\n          events: tempEvents,\n          cart: [...this.state.cart, opp]\n        };\n      }, () => {\n        console.log(this.state);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setEvents();\n  }\n\n  render() {\n    return React.createElement(EventContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetails: this.handleDetails,\n        handleCart: this.addToCart,\n        getResult: this.getResult\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst EventConsumer = EventContext.Consumer;\nexport { EventProvider, EventConsumer };","map":{"version":3,"sources":["C:\\Users\\seanr\\Vouch\\src\\context.js"],"names":["React","Component","storeProducts","detailProduct","eventList","EventContext","createContext","EventProvider","state","events","details","perks","cart","result","setEvents","tempEvents","forEach","event","singleEvent","setState","updateResult","newRes","getResult","getEvent","id","console","log","find","getEventbyName","name","handleDetails","addToCart","firstIndex","indexOf","actIndex","opp","inCart","componentDidMount","render","handleCart","props","children","EventConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {storeProducts, detailProduct, eventList} from './data';\r\n\r\nconst EventContext = React.createContext();\r\n\r\nclass EventProvider extends Component {\r\n    state = {\r\n        events: [], //TODO CHANGE TO EVENT LIST\r\n        details: detailProduct, //TODO CHANGE TO EVENT\r\n        perks: [],\r\n        cart: [],\r\n        result: 0\r\n    };\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.setEvents();\r\n    }\r\n\r\n    setEvents = () => {\r\n        let tempEvents = [];\r\n        eventList.forEach(event => {\r\n            const singleEvent = {...event};\r\n            tempEvents = [...tempEvents, singleEvent]\r\n        });\r\n        this.setState(() => {\r\n            return {events: tempEvents}\r\n        })\r\n    };\r\n\r\n    updateResult = (newRes) => {\r\n        this.setState(() => {\r\n            return{result: newRes};\r\n        })\r\n    };\r\n\r\n    getResult = (newRes) => {\r\n        this.updateResult(newRes)\r\n    };\r\n\r\n    getEvent = (id) => {\r\n        console.log(id + \"from context\");\r\n        const event = this.state.events.find(event => event.id === id);\r\n        return event;\r\n    };\r\n    getEventbyName = (name) => {\r\n        console.log(name + \"from context\");\r\n        const event = this.state.events.find(event => event.name === name);\r\n        return event;\r\n    };\r\n\r\n    handleDetails = (id) => {\r\n        console.log(id);\r\n        const event = this.getEvent(id);\r\n        this.setState(() => {\r\n            return {details: event};\r\n        });\r\n        console.log(\"dets\");\r\n        console.log(this.state.details);\r\n    };\r\n\r\n    addToCart = (id) => {\r\n        let tempEvents = [...this.state.events];\r\n        const firstIndex = tempEvents.indexOf(this.getEventbyName(id));\r\n        const actIndex = tempEvents[firstIndex].find(opp => opp.id === id);\r\n        const opp = tempEvents[firstIndex][actIndex];\r\n        opp.inCart = true;\r\n        this.setState(() => {\r\n            return { events: tempEvents, cart:[...this.state.cart, opp] };\r\n        }, ()=>{console.log(this.state)\r\n        }\r\n        )\r\n    };\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <EventContext.Provider value={{\r\n                ...this.state,\r\n                handleDetails: this.handleDetails,\r\n                handleCart: this.addToCart,\r\n                getResult: this.getResult,\r\n            }}>\r\n                {this.props.children}\r\n            </EventContext.Provider>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst EventConsumer = EventContext.Consumer;\r\n\r\n\r\nexport {EventProvider, EventConsumer};"]},"metadata":{},"sourceType":"module"}