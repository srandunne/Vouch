{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\seanr\\\\Vouch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\seanr\\\\Vouch\\\\src\\\\components\\\\Event.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    \\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { EventConsumer } from '../context';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button, Progress } from 'reactstrap';\nimport logo from \"../logo.svg\";\nimport CardFooter from 'reactstrap/es/CardFooter';\nimport PropTypes from 'prop-types';\nexport default class Event extends Component {\n  render() {\n    this.state = {\n      count: 1\n    };\n    const _this$props$event = this.props.event,\n          id = _this$props$event.id,\n          name = _this$props$event.name,\n          hostname = _this$props$event.hostname,\n          date = _this$props$event.date,\n          inCart = _this$props$event.inCart,\n          image = _this$props$event.image,\n          city = _this$props$event.city,\n          budget = _this$props$event.budget,\n          earned = _this$props$event.earned;\n    return React.createElement(EventWrapper, {\n      className: \"col-9 mx-auto col-md-6 col-lg-3 my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(EventConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, value => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      top: true,\n      width: \"100%\",\n      src: image,\n      alt: \"Card image cap\",\n      className: \"p-5\",\n      onClick: () => {\n        value.handleDetails(id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: eventNameStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, name), React.createElement(\"h5\", {\n      style: companyStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, hostname), React.createElement(\"h5\", {\n      style: dateStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, date), React.createElement(\"h5\", {\n      style: companyStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, city), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"$\", earned, \" Earned\"), React.createElement(Progress, {\n      value: earned / budget * 100,\n      animated: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"$\", budget, \" Needed\"))))));\n  }\n\n}\nEvent.propTypes = {\n  event: PropTypes.shape({\n    id: PropTypes.number,\n    img: PropTypes.number,\n    name: PropTypes.string,\n    date: PropTypes.string,\n    company: PropTypes.string,\n    city: PropTypes.string\n  }).isRequired\n};\nconst EventWrapper = styled.div(_templateObject());\nconst dateStyle = {\n  color: 'red'\n};\nconst companyStyle = {\n  color: '#6B6B6B'\n};\nconst eventNameStyle = {\n  color: '#000000'\n};","map":{"version":3,"sources":["C:\\Users\\seanr\\Vouch\\src\\components\\Event.js"],"names":["React","Component","styled","Link","EventConsumer","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","Progress","CardFooter","PropTypes","Event","render","state","count","props","event","id","name","hostname","date","inCart","image","city","budget","earned","value","handleDetails","eventNameStyle","companyStyle","dateStyle","propTypes","shape","number","img","string","company","isRequired","EventWrapper","div","color"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport {EventConsumer} from '../context';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle, Button, Progress } from 'reactstrap';\r\n\r\nimport logo from \"../logo.svg\"\r\nimport CardFooter from 'reactstrap/es/CardFooter';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\nexport default class Event extends Component {\r\n\r\n    render() {\r\n        this.state = {\r\n            count: 1,\r\n        };\r\n        const {id, name, hostname, date, inCart, image, city, budget, earned} = this.props.event;\r\n\r\n        return (\r\n            <EventWrapper className=\"col-9 mx-auto col-md-6 col-lg-3 my-3\">\r\n                <EventConsumer>\r\n                    {(value) => (\r\n                        <div>\r\n                            <Card>\r\n                                <Link to=\"/details\">\r\n                                    <CardImg top width=\"100%\" src={image} alt=\"Card image cap\" className=\"p-5\" onClick={() => {value.handleDetails(id)}}/>\r\n                                </Link>\r\n                                <CardBody>\r\n                                    <h2 style={eventNameStyle}>{name}</h2>\r\n                                    <h5 style={companyStyle}>{hostname}</h5>\r\n                                    <h5 style={dateStyle}>{date}</h5>\r\n                                    <h5 style={companyStyle}>{city}</h5>\r\n                                    <div className=\"text-center\">${earned} Earned</div>\r\n                                    <Progress value={(earned/budget)*100} animated={true}/>\r\n                                    <div className=\"text-center\">${budget} Needed</div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n                    )}\r\n                </EventConsumer>\r\n            </EventWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nEvent.propTypes = {\r\n    event:PropTypes.shape({\r\n        id:PropTypes.number,\r\n        img:PropTypes.number,\r\n        name:PropTypes.string,\r\n        date:PropTypes.string,\r\n        company:PropTypes.string,\r\n        city:PropTypes.string,\r\n    }).isRequired\r\n};\r\n\r\nconst EventWrapper = styled.div`\r\n    \r\n    `;\r\n\r\nconst dateStyle = {\r\n    color: 'red',\r\n};\r\nconst companyStyle = {\r\n    color: '#6B6B6B'\r\n};\r\nconst eventNameStyle = {\r\n    color: '#000000'\r\n};"]},"metadata":{},"sourceType":"module"}